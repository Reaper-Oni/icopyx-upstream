移植型号：From XC2S30 to XC3S100E

// ARM START
文件基础路径: armsrc/
文件修改列表：
	| 文件名
	| fpgaloader.c : 
	| ************************************************************************************
	| 修改了 DownloadFPGA() 函数在260行附近（XC3S100E最重要的变动）
	| 引脚操作：M2、M3
	| 1、290行附近 在PIO_PER中先使能GPIO_SPCK和GPIO_MOSI
	| 2、308行附近 在PIO_OER中配置GPIO_SPCK和GPIO_MOSI为输出脚
	| 3、310行附近 拉高 GPIO_SPCK 和 GPIO_MOSI
	| 	************   这里会是一段FPGA固件下载进程  **************
	| 4、330行附近，在while循环里确认FPGA准备好接收数据信号之后，
	| 拉低GPIO_SPCK和GPIO_MOSI两个脚，并且在PIO_PDR配置关闭这两个脚的使能
	| ************************************************************************************
	| 添加了 FpgaConfCurrentMode() 函数在416行附近（仅在使用HF&LF合并固件时使用）
	| 引脚操作：PA1
	| 1、判断当前有没有初始化固件
	| 2、如果有，则调用 FpgaWriteConfWord(FPGA_MAJOR_MODE_OFF); 尝试关闭天线
	| 3、然后配置使能与输出并且拉高GPIO_PA1，告知合并版本的FPGA固件切换到指定模式
	| 4、最后再次调用 FpgaWriteConfWord(FPGA_MAJOR_MODE_OFF); 尝试关闭天线
	| 5、返回true表示当前的合并固件直接切换状态成功，否则需要返回false让开发者刷写一次固件
	| 注：PA1为低电平使用LF固件，PA1为高电平使用HF固件
	| ************************************************************************************
	| 修改了 FpgaDownloadAndGo() 函数在448行附近
	| 在检查完固件是否已经是需要切换的版本之后，如果不是则
	| 1、在456行附近，判断是否可以直接切换到合并版本的固件，使用 FpgaConfCurrentMode() 函数
	| 2、如果切换成功，则说明已经有固件下载到FPGA了，接下来的操作直接跳过
	| 3、如果切换失败，则说明FPGA暂未初始化，需要开始接下来的初始化下载进程
	| 4、在486行附近，下载固件成功后，需要再次调用FpgaConfCurrentMode()函数拉高PA1脚
	| 注：切换失败默认会下载HF固件，所以我们需要下载完成后拉高PA1使FPGA运行在HF固件上
	| ##########################################################
	| 新引脚切换FPGA模式 ！！！
	| 文件名
	| config_gpio.h :
	| ************************************************************************************
	| 在47行附近修改了对AT91C_PIO_PA26引脚的命名
	| 1、从 GPIO_FPGA_ON 修改为 GPIO_FPGA_SWITCH
	| ##########################################################
	| 文件名
	| fpgaloader.c :
	| ************************************************************************************
	| 1、在270行附近注释了所有对 原本的 GPIO_FPGA_ON 的操作
	| 2、将FpgaConfCurrentMode函数中所有原本对PA1的操作改为对 GPIO_FPGA_SWITCH的操作
// ARM END
// FPGA START
fpga文件基础路径: FPGA/
fpga项目文件结构：
fpga_hf.v-
	|！--加速HF和LF指令切换速度（省去固件切换下载）
	|！--使用FRsel引脚控制选择目标模块，高为高频，低为低频
	|！--采用两个MUX控制信号到目标模块
	|--fpga_lfmo.v			//原有fpga_lf.v
		|！--添加天线控制IO，控制LF天线使能，高电平打开天线，低电平关闭天线。
			|！--增强LF写EM4305 T5577卡时稳定性。
			|！--采用mux(mux_ant)控制，关闭指令(111)拉低
		|！--因使用isa编辑，isa自动引用，故注释掉引用
		|！--模块名改为fpga_lfmod，文件改名为fpga_lfmod.v
		|--lo_edge_detect
			|！--因使用isa编辑，isa自动引用，故注释掉引用
	|--fpga_hfmod.v			//原有fpga_hf.v
		|！--因使用isa编辑，isa自动引用，故注释掉引用
		|！--模块名改为fpga_hfmod，文件改名为fpga_hfmod.v
		|--define.v 		//isa引用文件不可以多次引用，故采用单独文件包括
		|--hi_get_trace
			|--define.v 	//isa引用文件不可以多次引用，故采用单独文件包括	
		|！--230行附近，添加了滤波算法的阈值（原有为5，降低到3，降低高噪声卡的盲区高度），同时添加了一个20的阈值，并实现在嗅探模式时使用高阈值，读卡时使用低阈值，（嗅探如果使用低阈值，效率会非常低）

	|--mux2-one.v			//输出-输入模式2选1mux
		|！--已添加文件
	|--mux2-oneout.v			//输入-输出模式2选1mux
		|！--已添加文件
	|--fpga.ucf 			//新引脚分配，除原有引脚外添加了选择高低频模式和低频天线使能引脚

TODO:验证切换程序模块之后再切换回来，模块会不会因为上次残留数据工作不正常
// FPGA END